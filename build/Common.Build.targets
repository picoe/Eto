<?xml version="1.0" encoding="UTF-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Target Name="_EmbedReferencedAssemblies" Condition="$(EmbedReferences) != ''" AfterTargets="ResolveAssemblyReferences">
    <PropertyGroup>
      <EmbedDebugSymbols Condition="$(EmbedDebugSymbols) == ''">false</EmbedDebugSymbols>
      <EmbedPrefix Condition="$(EmbedPrefix) == ''">References</EmbedPrefix>
      <EmbedPrefix>$(EmbedPrefix).</EmbedPrefix>
    </PropertyGroup>
    <!-- Embed only specified references -->
    <_GetCommonFiles Files="@(ReferencePath)" Names="$(EmbedReferences)" Condition="$(EmbedReferences) != 'True'">
      <Output ItemName="EmbedReferences" TaskParameter="Result" />
    </_GetCommonFiles>
    <ItemGroup>
      <!-- Embed all copy local references -->
      <EmbedReferences Include="@(ReferenceCopyLocalPaths)" Condition="$(EmbedReferences) == 'True'" />
      <!-- Find files to embed and exclude -->
      <FilesToEmbed Include="@(EmbedReferences)" Condition="'%(EmbedReferences.Extension)' == '.dll'" />
      <FilesToEmbed Include="@(EmbedReferences)" Condition="$(EmbedDebugSymbols) == 'True' AND '%(EmbedReferences.Extension)' == '.pdb'" />
      <FilesToExclude Include="@(EmbedReferences)" Condition="$(EmbedDebugSymbols) != 'True' AND '%(EmbedReferences.Extension)' == '.pdb'" />
      <FilesToExclude Include="@(EmbedReferences)" Condition="'%(EmbedReferences.Extension)' == '.xml'" />
      <EmbeddedResource Include="@(FilesToEmbed)">
        <LogicalName>$(EmbedPrefix)%(FilesToEmbed.DestinationSubDirectory)%(FilesToEmbed.Filename)%(FilesToEmbed.Extension)</LogicalName>
      </EmbeddedResource>
      <!-- no need to copy the assemblies locally anymore -->
      <ReferenceCopyLocalPaths Remove="@(FilesToEmbed)" />
      <ReferenceCopyLocalPaths Remove="@(FilesToExclude)" />
    </ItemGroup>
    <Message Importance="high" Text="Embedding: @(FilesToEmbed->'%(Filename)%(Extension)', ', ')" />
  </Target>
  <Import Project="$(BasePath)build\MacTemplate\MacTemplate.targets" Condition="$(UseMacTemplate) == 'True'" />
  <Import Condition="Exists('$(BasePath)..\Eto.Common.targets')" Project="$(BasePath)..\Eto.Common.targets" />
  
  <Target Name="FixGtkReferences" Condition="$(FixGtkReferences)=='true'" BeforeTargets="BeforeBuild">
  	<!-- 
  	Set the path of gtk references explicitly for linux msbuild support.
  	msbuild on linux crashes with gtk references and uses the wrong references when 
  	both Gtk#2 and Gtk#3 are installed.
  	It's most likely because the Reference.Filename incorrectly includes the ", Version=" portion of the reference.
  	-->
  	<PropertyGroup>
  		<CliReferencePath Condition="$(CliReferencePath)==''">/usr/lib/cli/</CliReferencePath>
  	</PropertyGroup>
    <ItemGroup>
      <!-- collect the references we need to update -->
      <GtkReference Include="%(Reference.Identity)" Condition="%(Reference.Name) != '' and %(Reference.Name)!=%(Reference.Filename) and Exists('$(CliReferencePath)%(Reference.Name)-%(Reference.PackageVersion)/%(Reference.Name).dll')">
        <Name>%(Reference.Name)</Name>
        <FusionName>%(Reference.Identity)</FusionName>
        <PackageVersion>%(Reference.PackageVersion)</PackageVersion>
      </GtkReference>
      <!-- remove old references -->
      <Reference Remove="%(GtkReference.Identity)" />
      <!-- insert them back without the full version and a direct hint path -->
      <Reference Include="%(GtkReference.Name)">
        <HintPath>$(CliReferencePath)%(GtkReference.Name)-%(GtkReference.PackageVersion)/%(GtkReference.Name).dll</HintPath>
        <Private>False</Private>
        <SpecificVersion>True</SpecificVersion>
        <FusionName>%(GtkReference.FusionName)</FusionName>
      </Reference>
    </ItemGroup>
    <!--
    <Message Text="%(Reference.Filename) - %(Reference.HintPath)" Importance="high" />
    -->
  </Target>
  
  <ItemGroup Condition="$(GenerateAssemblyVersion) == 'True'">
    <Compile Include="$(IntermediateOutputPath)VersionInfo.cs">
      <Link>Properties\VersionInfo.cs</Link>
      <Visible>false</Visible>
    </Compile>
    <Compile Include="$(SourceDir)Shared\GlobalAssemblyInfo.cs">
      <Link>Properties\GlobalAssemblyInfo.cs</Link>
      <Visible>false</Visible>
    </Compile>
  </ItemGroup>
  
  <Target Name="_WriteVersion"
          BeforeTargets="CoreCompile"
          Condition="$(GenerateAssemblyVersion) == 'True'"
          Inputs="$(MSBuildAllProjects);
                  @(Compile);
                  @(_CoreCompileResourceInputs);
                  $(ApplicationIcon);
                  $(AssemblyOriginatorKeyFile);
                  @(ReferencePathWithRefAssemblies);
                  @(CompiledLicenseFile);
                  @(LinkResource);
                  @(EmbeddedDocumentation);
                  $(Win32Resource);
                  $(Win32Manifest);
                  @(CustomAdditionalCompileInputs);
                  $(ResolvedCodeAnalysisRuleSet);
                  @(AdditionalFiles);
                  @(EmbeddedFiles)"
          Outputs="$(IntermediateOutputPath)VersionInfo.cs">
    <!-- Generate auto version number so:
    a) we can use deterministic builds
    b) VS on Mac won't break intellisense when strong naming the assemblies
       see: https://github.com/mono/monodevelop/issues/4763
    -->
    <GenerateVersion Version="$(AssemblyVersion)" Condition="$(DefineEtoBuildTasks)">
    	<Output TaskParameter="Version" PropertyName="AssemblyFileVersion" />
    </GenerateVersion>

    <ItemGroup>
      <VersionInfo Include="[assembly: System.Reflection.AssemblyVersion(&quot;$(AssemblyVersion)&quot;)]" />
      <VersionInfo Include="[assembly: System.Reflection.AssemblyFileVersion(&quot;$(AssemblyFileVersion)&quot;)]"
                   Condition="'$(AssemblyFileVersion)'!=''"/>
      <VersionInfo Include="[assembly: System.Reflection.AssemblyInformationalVersion(&quot;$(AssemblyInformationalVersion)&quot;)]" />
    </ItemGroup>
    <MakeDir Directories="$(IntermediateOutputPath)" />
    <WriteLinesToFile File="$(IntermediateOutputPath)VersionInfo.cs" Overwrite="True" Lines="@(VersionInfo)" />
  </Target>
</Project>