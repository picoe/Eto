variables:
  build.increment: $[counter('buildnumber', 10000)]
  build.version: 2.5.3-ci-$(Build.BuildNumber)
  build.configuration: Release
  build.arguments: /t:Package /p:Configuration=$(build.configuration) /p:BuildVersion=$(build.version) /p:BuildBranch=$(Build.SourceBranch)
  build.dotnetversion: 3.1.100
  build.xamarinversion: 6_4_0

trigger:
  branches:
    include:
    - master
    - develop
  tags:
    include: 
    - '*'

jobs:
- job: Mac
  pool:
    vmImage: 'macOS-10.14'
  
  steps:
  - checkout: self
    submodules: true
    
  - script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(build.xamarinversion)
    displayName: 'Select Xamarin SDK version'

  - task: UseDotNet@2
    displayName: Install .NET Core SDK
    inputs:
      packageType:  sdk
      version:      $(build.dotnetversion)

  - task: msbuild@1
    displayName: Build and Package
    inputs: 
      solution: build/Build.proj
      msbuildArguments: $(build.arguments) /p:HaveWindowsDesktopSdk=false /v:minimal /bl:$(Build.ArtifactStagingDirectory)/msbuild-binlog/MSBuild.BuildPackage.MacOS.binlog

  - task: CopyFiles@2
    displayName: Copy nupkg
    inputs:
      sourceFolder: artifacts/nuget/$(build.configuration)/
      contents: |
        Eto.Platform.XamMac*.nupkg
        Eto.Platform.Gtk2*.nupkg
      targetFolder: $(Build.ArtifactStagingDirectory)/nuget/
      
  - task: PublishBuildArtifacts@1
    displayName: Publish nupkg
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/nuget/
      artifactName: nuget
      publishLocation: container

  - task: msbuild@1
    displayName: Build MonoDevelop Addin
    inputs:
      solution: build/Build.proj
      msbuildArguments: /t:BuildAddins /v:minimal /bl:$(Build.ArtifactStagingDirectory)/msbuild-binlog/MSBuild.BuildAddins.MacOS.binlog

  - task: CopyFiles@2
    displayName: Copy MonoDevelop Addin
    inputs:
      sourceFolder: artifacts/addin/$(build.configuration)/net472/
      contents: Eto.Addin.MonoDevelop*.mpack
      targetFolder: $(Build.ArtifactStagingDirectory)/addin/

  - task: PublishBuildArtifacts@1
    displayName: Publish MonoDevelop Addin
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/addin/
      artifactName: addins
      publishLocation: container

  - task: PublishBuildArtifacts@1
    condition: failed()
    displayName: Publish MSBuild logs
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/msbuild-binlog/
      artifactName: msbuild-binlog
      publishLocation: container                            
    
- job: Windows
  pool:
    vmImage: 'windows-2019'
  
  steps:
  - checkout: self
    submodules: true
    
  - task: UseDotNet@2
    displayName: Install .NET Core SDK
    inputs:
      packageType:  sdk
      version:      $(build.dotnetversion)

  - task: msbuild@1
    displayName: Build and Package
    inputs: 
      solution: build/Build.proj
      msbuildArguments: $(build.arguments) /p:HaveWindowsDesktopSdk=true /v:minimal /bl:$(Build.ArtifactStagingDirectory)/msbuild-binlog/MSBuild.BuildPackage.Windows.binlog

  - task: PublishBuildArtifacts@1
    displayName: Publish nupkg
    inputs:
      pathtoPublish: artifacts/nuget/$(build.configuration)/
      artifactName: nuget
      publishLocation: container
  - task: PublishBuildArtifacts@1
    displayName: Publish tests
    inputs:
      pathtoPublish: artifacts/test/$(build.configuration)/
      artifactName: test
      publishLocation: container
  - task: PublishBuildArtifacts@1
    displayName: Publish samples
    inputs:
      pathtoPublish: artifacts/samples/$(build.configuration)/
      artifactName: samples
      publishLocation: container
      
  - task: msbuild@1
    displayName: Build Visual Studio Addin
    inputs:
      solution: build/Build.proj
      msbuildArguments: /t:BuildAddins /p:HaveWindowsDesktopSdk=true /v:minimal /bl:$(Build.ArtifactStagingDirectory)/msbuild-binlog/MSBuild.BuildAddins.Windows.binlog
  - task: CopyFiles@2
    displayName: Copy Visual Studio Addin
    inputs:
      sourceFolder: artifacts/addin/$(build.configuration)/VisualStudio/
      contents: Eto.Addin.VisualStudio*.vsix
      targetFolder: $(Build.ArtifactStagingDirectory)/addin/
  - task: PublishBuildArtifacts@1
    displayName: Publish Visual Studio Addin
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/addin/
      artifactName: addins
      publishLocation: container
      
  - task: PublishBuildArtifacts@1
    condition: failed()
    displayName: Publish MSBuild logs
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)/msbuild-binlog/
      artifactName: msbuild-binlog
      publishLocation: container                            
